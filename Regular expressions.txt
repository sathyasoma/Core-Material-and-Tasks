
Reguler expression came java 1.4 version.

To represent group of string objects.

it simpley like validation or searching.

it is checking exact matching 
   you need to match the requierment(input)
   
   i want use regulaer expression in java?  
            what we do
	
	we have two classes, if you understand those two it will be done
	
pattern:
========
it is compiled version of Reguler expression.

equivalent java object of re.
	
when to go for:
=============
your searching for a file in  

xy ;;i want chech where i have xy (pattern)

xyxxyxyxxy  (content)
01

                                    java.util.Regx

                  //we have pattern class in the one static pre defiened method compile

                             pattern pattern= Pattern.compile("xy");
							 
							 
					//we have Matcher class , we have instance method match	 
							 Matcher  match= pattern.matcher("xyxxyxyxxy");
							 
							 
							 find()--search for perticuler string
							    match.find();   booelan
								
							start()---i wan to know the starting index
							
							end()====end index chekcing
							group()---which string is matched

    

class RegexEx{
public static void main(String args[]){

  
    Pattern pattern= Pattern.compile("xy");
	
	
	Matcher match=pattern.matcher("xyxxyxxy");
	
	
	while(match.find())
	{
	System.out.println(match.start());
	}
}

}	

o/p:::  0 3 6   // starting index numbers



==> next we are going to use end method
end()--will return index+1 ==>



eg:
===



class RegexEx{
public static void main(String args[]){

  
    Pattern pattern= Pattern.compile("xy");
	
	
	Matcher match=pattern.matcher("xyxxyxxy");
	
	
	while(match.find())
	{
	System.out.println(match.start()+""+match.end());
	}
}

}	

o/p:
       0 2(1+1)
	   3 5
	   6 8




eg:(group()) method  print match pattern


class RegexEx{
public static void main(String args[]){

  
    Pattern pattern= Pattern.compile("xy");
	
	
	Matcher match=pattern.matcher("xyxxyxxy");
	
	
	while(match.find())
	{
	System.out.println(match.start()+""+match.end()+" "+match.group());
	}
}

}	

o/p:
       0 2(1+1)  xy
	   3 5       xy
	   6 8       xy
	   
	   
	   
==> i want to count how many times it match?




class RegexEx{
public static void main(String args[]){

            int  count=0;
  
    Pattern pattern= Pattern.compile("xy");
	
	
	Matcher match=pattern.matcher("xyxxyxxy");
	
	
	while(match.find())
	{
	
	    count++;
	System.out.println(match.start()+""+match.end()+" "+match.group());
	}
	
	Syso(count);
}

}	

o/p: 3 // for count




charecter classses:
===================
[abc]==>either a or b or c

[^abc]--other tahn a or b or c

[a-z]--any lower case alphabet symbol
[A-Z]--any uppercse alphabet symbol
[a-zA-Z]any alphabet symbol
[0-9]--any digit from 0 -9
[a-zA-Z0-9]any alpha numeric
[^a-zA-Z0-9]-except alphanumeric charecter(special symbols)




pre defiende char classes:
=========================

compiler will treat as \ as escape char so we have to use \\s


\s--> searching for space char...

\S-->except space char

\d-->any digit from 0 -9

\D --except digit any char

\w ---any word char(alpha numeric)

\W -->excpet word char(special symbols)

.  --> any char


Quantifiers:
===========
to specify number of occurences

a   exacltly one a

a+ atleast one a 
a* any number of a's including zero numbr also

a? atmost one a


Pattern class split method
dividing string based according particular token will use split.






